{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faktu\\\\Desktop\\\\Projket_Firmowy\\\\front-end\\\\src\\\\routers\\\\AddTyp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n/* components */\nimport Error from \"../components/Error\";\nimport MyInput from \"../components/MyInput\";\nimport Button from \"../components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddTyp(props) {\n  _s();\n  const [newTyp, setNewTyp] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const addTyp = () => {\n    if (!newTyp) {\n      setError( /*#__PURE__*/_jsxDEV(Error, {\n        children: \"To pole nie mo\\u017Ce by\\u0107 puste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 22\n      }, this));\n    } else {\n      axios.post(\"http://127.0.0.1:8080/typ/add\", {\n        typ: newTyp\n      });\n      setNewTyp(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [error, /*#__PURE__*/_jsxDEV(MyInput, {\n      placeholder: \"Podaj Typ\",\n      value: newTyp,\n      onChange: e => {\n        setNewTyp(e.target.value);\n      },\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: e => {\n          e.preventDefault();\n          addTyp();\n          props.setAddNewTyp(false);\n        },\n        children: \"Dodaj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => props.setAddNewTyp(false),\n        children: \"Anuluj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(AddTyp, \"sYkANvvTFwAzrulcX+09xeTPrek=\");\n_c = AddTyp;\nvar _c;\n$RefreshReg$(_c, \"AddTyp\");","map":{"version":3,"names":["React","useState","axios","Error","MyInput","Button","AddTyp","props","newTyp","setNewTyp","error","setError","addTyp","post","typ","e","target","value","preventDefault","setAddNewTyp"],"sources":["C:/Users/faktu/Desktop/Projket_Firmowy/front-end/src/routers/AddTyp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n/* components */\r\nimport Error from \"../components/Error\";\r\nimport MyInput from \"../components/MyInput\";\r\nimport Button from \"../components/Button\";\r\nexport default function AddTyp(props) {\r\n    const [newTyp, setNewTyp] = useState(\"\");\r\n    const [error, setError] = useState(\"\")\r\n\r\n    const addTyp = () => {\r\n        if (!newTyp) {\r\n            setError(<Error>To pole nie może być puste</Error>)\r\n        } else {\r\n            axios.post(\"http://127.0.0.1:8080/typ/add\", { typ: newTyp })\r\n            setNewTyp(\"\")\r\n        }\r\n    }\r\n    return (\r\n        <form>\r\n            {error}\r\n            <MyInput\r\n                placeholder=\"Podaj Typ\"\r\n                value={newTyp}\r\n                onChange={(e) => { setNewTyp(e.target.value) }}\r\n                type=\"text\" />\r\n            <div>\r\n                <Button onClick={(e) => {\r\n                    e.preventDefault();\r\n                    addTyp()\r\n                    props.setAddNewTyp(false)\r\n                }}>Dodaj</Button>\r\n                <Button onClick={() => props.setAddNewTyp(false)}>Anuluj</Button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,MAAM,MAAM,sBAAsB;AAAC;AAC1C,eAAe,SAASC,MAAM,CAACC,KAAK,EAAE;EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,MAAM,GAAG,MAAM;IACjB,IAAI,CAACJ,MAAM,EAAE;MACTG,QAAQ,eAAC,QAAC,KAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmC,CAAC;IACvD,CAAC,MAAM;MACHT,KAAK,CAACW,IAAI,CAAC,+BAA+B,EAAE;QAAEC,GAAG,EAAEN;MAAO,CAAC,CAAC;MAC5DC,SAAS,CAAC,EAAE,CAAC;IACjB;EACJ,CAAC;EACD,oBACI;IAAA,WACKC,KAAK,eACN,QAAC,OAAO;MACJ,WAAW,EAAC,WAAW;MACvB,KAAK,EAAEF,MAAO;MACd,QAAQ,EAAGO,CAAC,IAAK;QAAEN,SAAS,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;MAAC,CAAE;MAC/C,IAAI,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eAClB;MAAA,wBACI,QAAC,MAAM;QAAC,OAAO,EAAGF,CAAC,IAAK;UACpBA,CAAC,CAACG,cAAc,EAAE;UAClBN,MAAM,EAAE;UACRL,KAAK,CAACY,YAAY,CAAC,KAAK,CAAC;QAC7B,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe,eACjB,QAAC,MAAM;QAAC,OAAO,EAAE,MAAMZ,KAAK,CAACY,YAAY,CAAC,KAAK,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/D;EAAA;IAAA;IAAA;IAAA;EAAA,QAEH;AAEf;AAAC,GA/BuBb,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}