{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faktu\\\\Desktop\\\\Projket_Firmowy\\\\front-end\\\\src\\\\routers\\\\Screwdriver.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Screwdriver = () => {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    // Tworzenie sceny, kamery i renderera\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n\n    // Ładowanie modelu 3D śrubokręta z pliku OBJ\n    const loader = new THREE.OBJLoader();\n    const modelURL = \"../modele3D/hammer.obj\";\n    loader.load(modelURL, object => {\n      scene.add(object);\n    });\n\n    // Ustawienie pozycji kamery i światła\n    camera.position.z = 5;\n    const light = new THREE.PointLight(0xFFFFFF, 1, 1000);\n    light.position.set(0, 0, 5);\n    scene.add(light);\n\n    // Obracanie śrubokręta\n    const animate = () => {\n      requestAnimationFrame(animate);\n      scene.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n    animate();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n};\n_s(Screwdriver, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = Screwdriver;\nexport default Screwdriver;\nvar _c;\n$RefreshReg$(_c, \"Screwdriver\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","Screwdriver","containerRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","current","appendChild","domElement","loader","OBJLoader","modelURL","load","object","add","position","z","light","PointLight","set","animate","requestAnimationFrame","rotation","y","render"],"sources":["C:/Users/faktu/Desktop/Projket_Firmowy/front-end/src/routers/Screwdriver.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nconst Screwdriver = () => {\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Tworzenie sceny, kamery i renderera\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer();\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    containerRef.current.appendChild(renderer.domElement);\r\n\r\n    // Ładowanie modelu 3D śrubokręta z pliku OBJ\r\n    const loader = new THREE.OBJLoader();\r\n    const modelURL = \"../modele3D/hammer.obj\";\r\n    loader.load(modelURL, (object) => {\r\n      scene.add(object);\r\n    });\r\n\r\n    // Ustawienie pozycji kamery i światła\r\n    camera.position.z = 5;\r\n    const light = new THREE.PointLight(0xFFFFFF, 1, 1000);\r\n    light.position.set(0, 0, 5);\r\n    scene.add(light);\r\n\r\n    // Obracanie śrubokręta\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      scene.rotation.y += 0.01;\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n  }, []);\r\n\r\n  return <div ref={containerRef} />\r\n};\r\n\r\nexport default Screwdriver;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC;AAE/B,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAMC,YAAY,GAAGJ,MAAM,CAAC,IAAI,CAAC;EAEjCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMI,KAAK,GAAG,IAAIH,KAAK,CAACI,KAAK,EAAE;IAC/B,MAAMC,MAAM,GAAG,IAAIL,KAAK,CAACM,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;IACjG,MAAMC,QAAQ,GAAG,IAAIV,KAAK,CAACW,aAAa,EAAE;IAC1CD,QAAQ,CAACE,OAAO,CAACL,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDP,YAAY,CAACW,OAAO,CAACC,WAAW,CAACJ,QAAQ,CAACK,UAAU,CAAC;;IAErD;IACA,MAAMC,MAAM,GAAG,IAAIhB,KAAK,CAACiB,SAAS,EAAE;IACpC,MAAMC,QAAQ,GAAG,wBAAwB;IACzCF,MAAM,CAACG,IAAI,CAACD,QAAQ,EAAGE,MAAM,IAAK;MAChCjB,KAAK,CAACkB,GAAG,CAACD,MAAM,CAAC;IACnB,CAAC,CAAC;;IAEF;IACAf,MAAM,CAACiB,QAAQ,CAACC,CAAC,GAAG,CAAC;IACrB,MAAMC,KAAK,GAAG,IAAIxB,KAAK,CAACyB,UAAU,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC;IACrDD,KAAK,CAACF,QAAQ,CAACI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC3BvB,KAAK,CAACkB,GAAG,CAACG,KAAK,CAAC;;IAEhB;IACA,MAAMG,OAAO,GAAG,MAAM;MACpBC,qBAAqB,CAACD,OAAO,CAAC;MAC9BxB,KAAK,CAAC0B,QAAQ,CAACC,CAAC,IAAI,IAAI;MACxBpB,QAAQ,CAACqB,MAAM,CAAC5B,KAAK,EAAEE,MAAM,CAAC;IAChC,CAAC;IACDsB,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO;IAAK,GAAG,EAAEzB;EAAa;IAAA;IAAA;IAAA;EAAA,QAAG;AACnC,CAAC;AAAC,GAlCID,WAAW;AAAA,KAAXA,WAAW;AAoCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}