{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faktu\\\\Desktop\\\\Projket_Firmowy\\\\front-end\\\\src\\\\routers\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n/* components */\nimport Container from '../components/Container';\nimport Error from '../components/Error';\nimport MyInput from '../components/MyInput';\nimport Button from '../components/Button';\nimport MainHeder from '../components/MainHeder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPassword() {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [statusError, setStatusError] = useState(false);\n  const {\n    token\n  } = useParams();\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    if (!password) {\n      setError( /*#__PURE__*/_jsxDEV(Error, {\n        children: \"Wpisz nowe has\\u0142o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 22\n      }, this));\n    } else if (password !== confirmPassword) {\n      setError( /*#__PURE__*/_jsxDEV(Error, {\n        children: \"Has\\u0142a nie s\\u0105 identyczne\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 22\n      }, this));\n      return;\n    } else {\n      axios.post('http://127.0.0.1:8080/user/reset-password', {\n        token,\n        password\n      }).then(res => {\n        if (res.status === 200) {\n          setError( /*#__PURE__*/_jsxDEV(Error, {\n            isAlternative: true,\n            children: \"Has\\u0142o zosta\\u0142o zresetowane mo\\u017Cesz sie zalogowa\\u0107\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 34\n          }, this));\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          setError( /*#__PURE__*/_jsxDEV(Error, {\n            children: \"Tw\\xF3j link resetuj\\u0105cy has\\u0142o straci\\u0142 wa\\u017Cno\\u015B\\u0107\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 34\n          }, this));\n        } else if (error.response.status === 404) {\n          setError( /*#__PURE__*/_jsxDEV(Error, {\n            children: \"Nie znaleziono u\\u017Cytkownika\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 34\n          }, this));\n        } else if (error.response.status === 500) {\n          setError( /*#__PURE__*/_jsxDEV(Error, {\n            children: \"Wyst\\u0105pi\\u0142 b\\u0142ad podczas uwierzytelniania u\\u017Cytkownika\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 34\n          }, this));\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    forContainer: true,\n    children: [/*#__PURE__*/_jsxDEV(MainHeder, {\n      children: \"Has\\u0142o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), error, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleResetPassword,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Podaj nowe has\\u0142o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n          isError: statusError,\n          type: \"password\",\n          value: password,\n          onChange: e => {\n            setPassword(e.target.value);\n            if (e.target.value.length === 0) {\n              setError(\"Wpisz hasło\");\n              setStatusError(true);\n            } else if (e.target.value.length < 6) {\n              setError( /*#__PURE__*/_jsxDEV(Error, {\n                children: \"Has\\u0142o musi zawiera\\u0107 minimum 6 znak\\xF3w\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 42\n              }, this));\n            } else if (!/[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]+/.test(e.target.value)) {\n              setError( /*#__PURE__*/_jsxDEV(Error, {\n                children: \"Has\\u0142o musi zawiera\\u0107 znak specjalny np: @ ! # & % $\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 42\n              }, this));\n            } else if (!/^[^\\s]*$/.test(e.target.value)) {\n              setError( /*#__PURE__*/_jsxDEV(Error, {\n                children: \"Has\\u0142o nie mo\\u017Ce zawiera\\u0107 pustych znak\\xF3w\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 42\n              }, this));\n            } else {\n              setError(\"\");\n              setStatusError(false);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Potwierd\\u017A nowe has\\u0142o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n          isError: statusError,\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => {\n            setConfirmPassword(e.target.value);\n            if (e.target.value !== password) {\n              setError(\"Podane hasła nie sa identyczne\");\n              setStatusError(true);\n            } else {\n              setStatusError(false);\n              setError(\"\");\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Zresetuj has\\u0142o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(ResetPassword, \"vjd/I244BTfdBP+nMb9PHm7/mEA=\", false, function () {\n  return [useParams];\n});\n_c = ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useParams","axios","Container","Error","MyInput","Button","MainHeder","ResetPassword","password","setPassword","confirmPassword","setConfirmPassword","error","setError","statusError","setStatusError","token","handleResetPassword","e","preventDefault","post","then","res","status","catch","response","target","value","length","test"],"sources":["C:/Users/faktu/Desktop/Projket_Firmowy/front-end/src/routers/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n/* components */\r\nimport Container from '../components/Container';\r\nimport Error from '../components/Error';\r\nimport MyInput from '../components/MyInput';\r\nimport Button from '../components/Button';\r\nimport MainHeder from '../components/MainHeder';\r\n\r\nexport default function ResetPassword() {\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [statusError, setStatusError] = useState(false)\r\n    const { token } = useParams();\r\n\r\n    const handleResetPassword = async (e) => {\r\n        e.preventDefault();\r\n        if (!password) {\r\n            setError(<Error>Wpisz nowe hasło</Error>)\r\n        } else if (password !== confirmPassword) {\r\n            setError(<Error>Hasła nie są identyczne</Error>);\r\n            return;\r\n        } else {\r\n            axios.post('http://127.0.0.1:8080/user/reset-password', {\r\n                token,\r\n                password\r\n            })\r\n                .then((res) => {\r\n                    if (res.status === 200) {\r\n                        setError(<Error isAlternative={true}>Hasło zostało zresetowane możesz sie zalogować</Error>)\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    if (error.response.status === 401) {\r\n                        setError(<Error>Twój link resetujący hasło stracił ważność</Error>)\r\n                    } else if (error.response.status === 404) {\r\n                        setError(<Error>Nie znaleziono użytkownika</Error>)\r\n                    } else if (error.response.status === 500) {\r\n                        setError(<Error>Wystąpił bład podczas uwierzytelniania użytkownika</Error>)\r\n                    }\r\n                })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container forContainer={true}>\r\n            <MainHeder>Hasło</MainHeder>\r\n            {error}\r\n            <form onSubmit={handleResetPassword}>\r\n                <label>\r\n                    <p> Podaj nowe hasło:</p>\r\n                    <MyInput\r\n                        isError={statusError}\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) =>{ setPassword(e.target.value)\r\n                            if (e.target.value.length === 0) {\r\n                                setError(\"Wpisz hasło\");\r\n                                setStatusError(true)\r\n                            } else if (e.target.value.length < 6) {\r\n                                setError(<Error>Hasło musi zawierać minimum 6 znaków</Error>)\r\n                            } else if (!/[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]+/.test(e.target.value)) {\r\n                                setError(<Error>Hasło musi zawierać znak specjalny np: @ ! # & % $</Error>)\r\n                            } else if (!/^[^\\s]*$/.test(e.target.value)) {\r\n                                setError(<Error>Hasło nie może zawierać pustych znaków</Error>)\r\n                            } else {\r\n                                setError(\"\");\r\n                                setStatusError(false);\r\n                            }\r\n                        }}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <p> Potwierdź nowe hasło:</p>\r\n                    <MyInput\r\n                        isError={statusError}\r\n                        type=\"password\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => {\r\n                            setConfirmPassword(e.target.value)\r\n                            if (e.target.value !== password) {\r\n                                setError(\"Podane hasła nie sa identyczne\")\r\n                                setStatusError(true)\r\n                            } else {\r\n                                setStatusError(false);\r\n                                setError(\"\")\r\n                            }\r\n                        }}\r\n                    />\r\n                </label>\r\n                <Button type=\"submit\">Zresetuj hasło</Button>\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}