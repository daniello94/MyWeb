{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faktu\\\\Desktop\\\\Projket_Firmowy\\\\front-end\\\\src\\\\routers\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n/* components */\nimport Container from '../components/Container';\nimport Error from '../components/Error';\nimport MyInput from '../components/MyInput';\nimport Button from '../components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPassword() {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [statusError, setStatusError] = useState(false);\n  const {\n    token\n  } = useParams();\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    if (!password) {\n      setError('Wpisz nowe hasło');\n    } else if (password !== confirmPassword) {\n      setError('Hasła nie są takie same');\n      return;\n    }\n    try {\n      const response = await axios.post(`http://127.0.0.1:8080/user/reset-password`, {\n        token,\n        password\n      });\n      setSuccess(response.data.success);\n      setError( /*#__PURE__*/_jsxDEV(Error, {\n        isalternative: true,\n        children: \"Has\\u0142o zosta\\u0142o zmienione pomy\\u015B\\u0142nie mo\\u017Cesz sie zalogowa\\u0107\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 22\n      }, this));\n    } catch (error) {\n      setError(error.response.data.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    forContainer: true,\n    children: [error && /*#__PURE__*/_jsxDEV(Error, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }, this), success && /*#__PURE__*/_jsxDEV(Error, {\n      isalternative: true,\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleResetPassword,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Podaj nowe has\\u0142o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n          isError: statusError,\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Potwierd\\u017A nowe has\\u0142o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n          isError: statusError,\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => {\n            setConfirmPassword(e.target.value);\n            if (e.target.value !== password) {\n              setError(\"Podane hasła nie sa identyczne\");\n              setStatusError(true);\n            } else {\n              setStatusError(false);\n              setError(\"\");\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Zresetuj has\\u0142o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(ResetPassword, \"QeLasTlRscUrSuQPDiAHpRV01lM=\", false, function () {\n  return [useParams];\n});\n_c = ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useParams","axios","Container","Error","MyInput","Button","ResetPassword","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","statusError","setStatusError","token","handleResetPassword","e","preventDefault","response","post","data","target","value"],"sources":["C:/Users/faktu/Desktop/Projket_Firmowy/front-end/src/routers/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n/* components */\r\nimport Container from '../components/Container';\r\nimport Error from '../components/Error';\r\nimport MyInput from '../components/MyInput';\r\nimport Button from '../components/Button';\r\n\r\nexport default function ResetPassword() {\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const [statusError, setStatusError] = useState(false)\r\n    const { token } = useParams();\r\n\r\n    const handleResetPassword = async (e) => {\r\n        e.preventDefault();\r\n        if (!password) {\r\n            setError('Wpisz nowe hasło')\r\n        } else if (password !== confirmPassword) {\r\n            setError('Hasła nie są takie same');\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.post(`http://127.0.0.1:8080/user/reset-password`, { token, password });\r\n            setSuccess(response.data.success);\r\n            setError(<Error isalternative={true}>Hasło zostało zmienione pomyśłnie możesz sie zalogować</Error>)\r\n        } catch (error) {\r\n            setError(error.response.data.error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container forContainer={true}>\r\n            {error && <Error>{error}</Error>}\r\n            {success && <Error isalternative={true}>{success}</Error>}\r\n            <form onSubmit={handleResetPassword}>\r\n                <label>\r\n                    <p> Podaj nowe hasło:</p>\r\n                    <MyInput\r\n                        isError={statusError}\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <p> Potwierdź nowe hasło:</p>\r\n                    <MyInput\r\n                        isError={statusError}\r\n                        type=\"password\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => {\r\n                            setConfirmPassword(e.target.value)\r\n                            if (e.target.value !== password) {\r\n                                setError(\"Podane hasła nie sa identyczne\")\r\n                                setStatusError(true)\r\n                            } else {\r\n                                setStatusError(false);\r\n                                setError(\"\")\r\n                            }\r\n                        }}\r\n                    />\r\n                </label>\r\n                <Button type=\"submit\">Zresetuj hasło</Button>\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}