{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faktu\\\\Desktop\\\\Projket_Firmowy\\\\front-end\\\\src\\\\routers\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n/* components */\nimport Container from '../components/Container';\nimport Error from '../components/Error';\nimport MyInput from '../components/MyInput';\nimport Button from '../components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPassword() {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const {\n    token\n  } = useParams();\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setError('Hasła nie są takie same');\n      return;\n    }\n    try {\n      const response = await axios.post(`http://127.0.0.1:8080/user/reset-password`, {\n        token,\n        password\n      });\n      setSuccess(response.data.success);\n    } catch (error) {\n      setError(error.response.data.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    forContainer: true,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleResetPassword,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Podaj nowe has\\u0142o:\", /*#__PURE__*/_jsxDEV(MyInput, {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Potwierd\\u017A nowe has\\u0142o:\", /*#__PURE__*/_jsxDEV(MyInput, {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Zresetuj has\\u0142o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(ResetPassword, \"aLVkDdeNKL7WMrGZklKTFIovqSM=\", false, function () {\n  return [useParams];\n});\n_c = ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useParams","axios","Container","Error","MyInput","Button","ResetPassword","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","token","handleResetPassword","e","preventDefault","response","post","data","target","value"],"sources":["C:/Users/faktu/Desktop/Projket_Firmowy/front-end/src/routers/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n/* components */\r\nimport Container from '../components/Container';\r\nimport Error from '../components/Error';\r\nimport MyInput from '../components/MyInput';\r\nimport Button from '../components/Button';\r\n\r\nexport default function ResetPassword() {\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const { token } = useParams();\r\n\r\n    const handleResetPassword = async (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setError('Hasła nie są takie same');\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.post(`http://127.0.0.1:8080/user/reset-password`, {token, password });\r\n            setSuccess(response.data.success);\r\n        } catch (error) {\r\n            setError(error.response.data.error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container forContainer={true}>\r\n            {error && <p>{error}</p>}\r\n            {success && <p>{success}</p>}\r\n            <form onSubmit={handleResetPassword}>\r\n                <label>\r\n                    Podaj nowe hasło:\r\n                    <MyInput\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Potwierdź nowe hasło:\r\n                    <MyInput\r\n                        type=\"password\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    />\r\n                </label>\r\n                <Button type=\"submit\">Zresetuj hasło</Button>\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,MAAM,MAAM,sBAAsB;AAAC;AAE1C,eAAe,SAASC,aAAa,GAAG;EAAA;EACpC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM;IAAEgB;EAAM,CAAC,GAAGf,SAAS,EAAE;EAE7B,MAAMgB,mBAAmB,GAAG,MAAOC,CAAC,IAAK;IACrCA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIX,QAAQ,KAAKE,eAAe,EAAE;MAC9BG,QAAQ,CAAC,yBAAyB,CAAC;MACnC;IACJ;IACA,IAAI;MACA,MAAMO,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAE,2CAA0C,EAAE;QAACL,KAAK;QAAER;MAAS,CAAC,CAAC;MAClGO,UAAU,CAACK,QAAQ,CAACE,IAAI,CAACR,OAAO,CAAC;IACrC,CAAC,CAAC,OAAOF,KAAK,EAAE;MACZC,QAAQ,CAACD,KAAK,CAACQ,QAAQ,CAACE,IAAI,CAACV,KAAK,CAAC;IACvC;EACJ,CAAC;EAED,oBACI,QAAC,SAAS;IAAC,YAAY,EAAE,IAAK;IAAA,WACzBA,KAAK,iBAAI;MAAA,UAAIA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,EACvBE,OAAO,iBAAI;MAAA,UAAIA;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK,eAC5B;MAAM,QAAQ,EAAEG,mBAAoB;MAAA,wBAChC;QAAA,kDAEI,QAAC,OAAO;UACJ,IAAI,EAAC,UAAU;UACf,KAAK,EAAET,QAAS;UAChB,QAAQ,EAAGU,CAAC,IAAKT,WAAW,CAACS,CAAC,CAACK,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAC/C;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACR;QAAA,2DAEI,QAAC,OAAO;UACJ,IAAI,EAAC,UAAU;UACf,KAAK,EAAEd,eAAgB;UACvB,QAAQ,EAAGQ,CAAC,IAAKP,kBAAkB,CAACO,CAAC,CAACK,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QACtD;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACR,QAAC,MAAM;QAAC,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAwB;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1C;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEpB;AAAC,GA9CuBjB,aAAa;EAAA,QAKfN,SAAS;AAAA;AAAA,KALPM,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}